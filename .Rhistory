library(here)
library(readr)
library(dplyr)
library(here)
library(readr)
library(dplyr)
df_netsurv <- read_csv(here('data', 'NetWorkSurvey(2-28-20).csv'))
View(df_netsurv)
# load basic survey
df_basicsurv <- read_csv(here('data', 'BasicSurvey(3-6-20).csv'))
View(df_basicsurv)
data <- readRDS("C:/Users/mlwood/Box/Research/NetHealth/Religious Nones Networks/arcs_relig_fall-2015.rds")
View(data)
View(df_netsurv)
rm(data)
View(df_netsurv)
# subset to W3
df_netsurv <- df_netsurv |>
select(wave = "Wave3")
# subset to W3
df_netsurv <- df_netsurv |>
select(wave == "Wave3")
# subset to W3
df_netsurv <- df_netsurv |>
filter(wave == "Wave3")
View(df_netsurv)
#load ego-network edge list
df_egonet_edges <- read.csv(here('data', 'AlterAlterEdgeList(1-26-20).csv)'))
library(here)
# load ego network survey
df_netsurv <- read_csv(here('data', 'NetWorkSurvey(2-28-20).csv'))
# load basic survey
df_basicsurv <- read_csv(here('data', 'BasicSurvey(3-6-20).csv'))
#load ego-network edge list
df_egonet_edges <- read.csv(here('data', 'AlterAlterEdgeList(1-26-20).csv)'))
#load ego-network edge list
df_egonet_edges <- read.csv(here('data', 'AlterAlterEdgeList(1-26-20).csv'))
View(df_netsurv)
View(df_egonet_edges)
table(df_netsurv$wave)
df_egonet_edges <- df_egonet_edges |>
filter(wave == 3)
View(df_egonet_edges)
df_ego_alter_ties <- df_egonet_edges |>
filter(egoid == vertex1)
View(df_ego_alter_ties)
df_egonet_summary <- df_ego_alter_ties |>
count(egoid)
View(df_egonet_summary)
df_alter_alter_ties <- df_egonet_edges |>
filter(egoid != vertex1)
View(df_alter_alter_ties)
library(here)
library(readr)
library(dplyr)
# load ego network survey
df_netsurv <- read_csv(here('data', 'NetWorkSurvey(2-28-20).csv'))
# load basic survey
df_basicsurv <- read_csv(here('data', 'BasicSurvey(3-6-20).csv'))
#load ego-network edge list
df_egonet_edges <- read.csv(here('data', 'AlterAlterEdgeList(1-26-20).csv'))
# subset the network dataframes to W3
df_netsurv <- df_netsurv |>
filter(wave == "Wave3")
df_egonet_edges <- df_egonet_edges |>
filter(wave == 3)
df_ego_alter_ties <- df_egonet_edges |>
filter(egoid == vertex1)
df_alter_alter_ties <- df_egonet_edges |>
filter(egoid != vertex1)
View(df_alter_alter_ties)
# calculate n (number of alters)
df_egonet_summary$m <- df_alter_alter_ties |>
count(egoid)
# calculate n (number of alters)
df_egonet_summary <- df_ego_alter_ties |>
count(egoid)
# calculate m (number of alter-alter ties)
df_egonet_summary$m <- df_ego_alter_ties |>
count(egoid)
View(df_egonet_summary)
# calculate n (number of alters)
df_egonet_summary <- df_ego_alter_ties |>
count(egoid)
# calculate m (number of alter-alter ties)
df_egonet_summary <- df_alter_alter_ties |>
mutate(m = count(egoid))
# calculate m (number of alter-alter ties)
df_egonet_summary <- df_alter_alter_ties |>
group_by(egoid) %>%
mutate(m = n())
View(df_egonet_summary)
# calculate n (number of alters)
df_egonet_summary <- df_ego_alter_ties |>
count(egoid)
# calculate m (number of alter-alter ties)
df_egonet_alt_summary <- df_alter_alter_ties |>
count(egoid)
View(df_egonet_alt_summary)
# calculate m (number of alter-alter ties)
df_egonet_alt_summary <- df_alter_alter_ties |>
count(egoid, name = "m")
View(df_egonet_alt_summary)
df_egonet_summary <- left_join(df_egonet_summary, df_egonet_alt_summary, by = egoid)
df_egonet_summary <- left_join(df_egonet_summary, df_egonet_alt_summary, by = "egoid")
View(df_egonet_summary)
# calculate CC
df_egonet_summary <- df_egonet_summary |>
mutate(cc = (m/(n(n-1))))
# calculate CC
df_egonet_summary <- df_egonet_summary |>
mutate(cc = (m/(n*(n-1))))
View(df_basicsurv)
View(df_egonet_summary)
11/30
View(df_basicsurv)
View(df_netsurv)
df_w3_comb_data <- left_join(df_basicsurv, df_netsurv, by = "egoid")
View(df_egonet_summary)
df_w3_comb_data <- left_join(df_w3_comb_data, df_egonet_summary)
View(df_w3_comb_data)
saveRDS(df_w3_comb_data, "df_w3_comb_data.RDS")
saveRDS(df_w3_comb_data, here('data', 'df_w3_comb_data.RDS'))
keep (df_w3_comb_data)
rm(list=setdiff(ls(), 'df_w3_comb_data'))
library(here)
library(readr)
library(dplyr)
# Load data ---------------------------------------------------------------
# load ego network survey
df_netsurv <- read_csv(here('data', 'NetWorkSurvey(2-28-20).csv'))
# load basic survey
df_basicsurv <- read_csv(here('data', 'BasicSurvey(3-6-20).csv'))
#load ego-network edge list
df_egonet_edges <- read.csv(here('data', 'AlterAlterEdgeList(1-26-20).csv'))
# Subset Data -------------------------------------------------------------
# subset the network dataframes to W3
df_netsurv <- df_netsurv |>
filter(wave == 'Wave3')
df_egonet_edges <- df_egonet_edges |>
filter(wave == 3)
# Calculate Clustering Coefficient ----------------------------------------
df_ego_alter_ties <- df_egonet_edges |>
filter(egoid == vertex1)
df_alter_alter_ties <- df_egonet_edges |>
filter(egoid != vertex1)
# calculate n (number of alters)
df_egonet_summary <- df_ego_alter_ties |>
count(egoid)
# calculate m (number of alter-alter ties)
df_egonet_alt_summary <- df_alter_alter_ties |>
count(egoid, name = 'm')
# join summary data frames
df_egonet_summary <- left_join(df_egonet_summary, df_egonet_alt_summary, by = 'egoid')
# calculate CC
df_egonet_summary <- df_egonet_summary |>
mutate(cc = (m/(n*(n-1))))
# Merge data frames -------------------------------------------------------
#create combined file with all three dataframes
df_w3_comb_data <- left_join(df_basicsurv, df_netsurv, by = 'egoid')
df_w3_comb_data <- left_join(df_w3_comb_data, df_egonet_summary)
# remove all unnecessary objects
rm(list=setdiff(ls(), 'df_w3_comb_data'))
View(df_w3_comb_data)
# filter out altrelig == NA
df_w3_comb_data <- df_w3_comb_data |>
filter(!is.na(altrelig))
View(df_w3_comb_data)
# create same-gender variable
table(df_w3_comb_data$gender_1)
df_w3_comb_data <- df_w3_comb_data |>
mutate(
same_gender = case_when(
gender_1 == "Female" & altsex == "Female" ~ 1,
gender_1 == "Male" & altsex == "Male" ~ 1,
TRUE ~ 0
))
# create same-gender variable
table(df_w3_comb_data$same_gender)
# count the number of non-religious alters
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(n_norelig = sum(altrelig == "NoReligion"))
table(df_w3_comb_data$n_norelig)
View(df_w3_comb_data)
# count the number of same-gender alters
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(n_samegender = sum(same_gender == 1))
#count the degree
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(degree = n())
# calculate the percent of non-religious alters
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(perc_none = n_norelig/degree)
View(df_w3_comb_data)
# calculate the percent of same-gender alters
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(perc_samegender = n_samegender/degree)
table(df_w3_comb_data$ego_relig)
View(df_w3_comb_data)
table(df_w3_comb_data$yourelig_1)
table(df_w3_comb_data$yourelig_3)
table(df_w3_comb_data$yourelig_2)
table(df_w3_comb_data$yourelig_1)
# filter out yourelig == NA
df_w3_comb_data <- df_w3_comb_data |>
filter(!is.na(yourelig_1))
table(df_w3_comb_data$altrelig)
# create same-relig variable
df_w3_comb_data <- df_w3_comb_data |>
mutate(
same_relig = case_when(
yourelig_1 == "Catholic" & altrelig == "Catholic" ~ 1,
yourelig_1 == "No Religion" & altrelig == "NoReligion" ~ 1,
yourelig_1 == "Other Religion" & altrelig == "OtherReligion" ~ 1,
yourelig_1 == "Protestant" & altrelig == "Protestant" ~ 1,
TRUE ~ 0
))
# count the number of same-relig alters
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(n_samerelig = sum(same_relig == 1))
# count the number of diff-relig alters
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(n_diffrelig = degree-n_samerelig)
# calculate the EI index
# E-I/(E+I)
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) |>
mutate(ei = (n_diffrelig-n_samerelig)/(degree))
rm(df_w3_comb_data)
# Header ------------------------------------------------------------------
# Title: Prep_data
# Author: Michael Wood
# Created: 20220908
# Last Edited: 20220908
# Purpose: Prepare survey and ego-network data for (W3) analysis
# Load packages -----------------------------------------------------------
library(here)
library(readr)
library(dplyr)
# Load data ---------------------------------------------------------------
# load ego network survey
df_netsurv <- read_csv(here('data', 'NetWorkSurvey(2-28-20).csv'))
# load basic survey
df_basicsurv <- read_csv(here('data', 'BasicSurvey(3-6-20).csv'))
#load ego-network edge list
df_egonet_edges <- read.csv(here('data', 'AlterAlterEdgeList(1-26-20).csv'))
# Subset Data -------------------------------------------------------------
# subset the network dataframes to W3
df_netsurv <- df_netsurv |>
filter(wave == 'Wave3')
df_egonet_edges <- df_egonet_edges |>
filter(wave == 3)
# Calculate Clustering Coefficient ----------------------------------------
df_ego_alter_ties <- df_egonet_edges |>
filter(egoid == vertex1)
df_alter_alter_ties <- df_egonet_edges |>
filter(egoid != vertex1)
# calculate n (number of alters)
df_egonet_summary <- df_ego_alter_ties |>
count(egoid)
# calculate m (number of alter-alter ties)
df_egonet_alt_summary <- df_alter_alter_ties |>
count(egoid, name = 'm')
# join summary data frames
df_egonet_summary <- left_join(df_egonet_summary, df_egonet_alt_summary, by = 'egoid')
# calculate CC
df_egonet_summary <- df_egonet_summary |>
mutate(cc = (m/(n*(n-1))))
# Merge data frames -------------------------------------------------------
#create combined file with all three dataframes
df_w3_comb_data <- left_join(df_basicsurv, df_netsurv, by = 'egoid')
df_w3_comb_data <- left_join(df_w3_comb_data, df_egonet_summary)
# Create Proportion Measures ----------------------------------------------
# filter out altrelig == NA
df_w3_comb_data <- df_w3_comb_data |>
filter(!is.na(altrelig))
# filter out yourelig == NA
df_w3_comb_data <- df_w3_comb_data |>
filter(!is.na(yourelig_1))
# create same-gender variable
df_w3_comb_data <- df_w3_comb_data |>
mutate(
same_gender = case_when(
gender_1 == "Female" & altsex == "Female" ~ 1,
gender_1 == "Male" & altsex == "Male" ~ 1,
TRUE ~ 0
))
table(df_w3_comb_data$altrelig)
# create same-relig variable
df_w3_comb_data <- df_w3_comb_data |>
mutate(
same_relig = case_when(
yourelig_1 == "Catholic" & altrelig == "Catholic" ~ 1,
yourelig_1 == "No Religion" & altrelig == "NoReligion" ~ 1,
yourelig_1 == "Other Religion" & altrelig == "OtherReligion" ~ 1,
yourelig_1 == "Protestant" & altrelig == "Protestant" ~ 1,
TRUE ~ 0
))
# count the number of non-religious alters
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(n_norelig = sum(altrelig == "NoReligion"))
table(df_w3_comb_data$n_norelig)
# count the number of same-gender alters
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(n_samegender = sum(same_gender == 1))
# count the number of same-relig alters
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(n_samerelig = sum(same_relig == 1))
#count the degree
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(degree = n())
# count the number of diff-relig alters
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(n_diffrelig = degree-n_samerelig)
# calculate the percent of non-religious alters
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(perc_none = n_norelig/degree)
# calculate the percent of same-gender alters
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) %>%
mutate(perc_samegender = n_samegender/degree)
# calculate the EI index
# E-I/(E+I)
df_w3_comb_data <- df_w3_comb_data |>
group_by(egoid) |>
mutate(ei = (n_diffrelig-n_samerelig)/(degree))
# Export and Clean --------------------------------------------------------
# export df as an .rds in data folder
saveRDS(df_w3_comb_data, here('data', 'df_w3_comb_data.RDS'))
# remove all unnecessary objects
rm(list=setdiff(ls(), 'df_w3_comb_data'))
install.packages("frm")
library(frm)
density(df_w3_comb_data$ei)
hist(df_w3_comb_data$ei)
library(broom)
install.packages("tidyr")
library(broom)
model <- lm(ei ~ yourelig_1, df_w3_comb_data)
model
summary(model)
model.diag.metrics <- augment(model)
head(model.diag.metrics)
ggplot(model.diag.metrics, aes(yourelig_1, ei)) +
geom_point() +
stat_smooth(method = lm, se = FALSE) +
geom_segment(aes(xend = youtube, yend = .fitted), color = "red", size = 0.3)
library(ggplot2)
ggplot(model.diag.metrics, aes(yourelig_1, ei)) +
geom_point() +
stat_smooth(method = lm, se = FALSE) +
geom_segment(aes(xend = youtube, yend = .fitted), color = "red", size = 0.3)
ggplot(model.diag.metrics, aes(yourelig_1, ei)) +
geom_point() +
stat_smooth(method = lm, se = FALSE) +
geom_segment(aes(xend = yourelig_1, yend = .fitted), color = "red", size = 0.3)
install.packages("ggfortify")
library(ggfortify)
autoplot(model)
model <- lm(cc ~ yourelig_1, df_w3_comb_data)
summary(model)
summary(df_w3_comb_data$cc)
df_w3_comb_data <- df_w3_comb_data |>
filter(!is.na(cc))
model <- lm(cc ~ yourelig_1, df_w3_comb_data)
summary(model)
